<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.emp.mapper.EmpMapper">
	<!-- 전체조회 ORDER BY 들어갈수 있도록 작성 -->
	<select id="selectEmpList" resultType="EmpVO">
		SELECT employee_id
		, last_name
		, email
		, hire_date
		, job_id
		, salary
		FROM employees
		ORDER BY
		employee_id
	</select>

	<!-- 단건조회 ORDER BY 가 빠지고 WHERE 들어감 mybatis만 변수명은 #으로 가져온다 나머지는 다 $ 이거 쓴다 
		#은 특정타입만 알려주면 알아서 처리 $는 statement 그냥 홀따옴표 다뺸다 -->
	<select id="selectEmpInfo" resultType="EmpVO">
		SELECT employee_id
		, last_name
		, email
		, hire_date
		, job_id
		, salary
		FROM
		employees
		WHERE employee_id = #{employeeId}
		<!-- column LIKE '%'||#{field}||'%' 얘가 # column LIKE '%${field}%' 얘가 $ 
			일때 예시 -->
	</select>
	<!-- <select id="" resultType="int"> SELECT NVL(MAX(employee_id),0) + 1 
		FROM employees </select> -->

	<!-- 등록 -->
	<insert id="insertEmpInfo" parameterType="EmpVO">  <!--selectkey는 EmpVO 않에 담긴다 -->
		<selectKey keyProperty="employeeId" resultType="int"
			order="BEFORE">   <!-- order="BEBFORE" 메인쿼리문 전에 실행할건지 다음에 실행할건지 실행 순서 -->
			SELECT NVL(MAX(employee_id),0) + 1
			FROM employees
		</selectKey>
		INSERT INTO employees
		(
		employee_id
		, last_name
		, email
		, hire_date
		, job_id
		, salary
		)
		VALUES
		(
		#{employeeId}
		,#{lastName}
		,#{email}
		,#{hireDate}
		,#{jobId}
		,#{salary}
		)
	</insert>

	<!-- 수정 : 전제조건, 전체데이터 전송 -->
	<update id="updateEmpInfo" parameterType="EmpVO">
		UPDATE employees
		SET
		last_name = #{lastName},
		email = #{email},
		salary = #{salary}
		WHERE
		employee_id = #{employeeId}
	</update>

	<!-- 삭제 -->
	<delete id="deleteEmpInfo" parameterType="int">
		DELETE FROM employees
		WHERE employee_id = #{eid} <!-- parameterType 객체 일때만 -->
	</delete>

	<!-- 수정 : 변경된 데이터만 전송 -->
	<update id="updateEmpInfoDynamic" parameterType="EmpVO">
		UPDATE employees
		SET
		<choose> <!-- when 이라는 다중조건이 있다 -->
			<when test="lastName != null and !lastName.equals('')"> <!-- 하용하지 않겠다 -->
				last_name = #{lastName}
			</when>
			<otherwise>
				last_name = 'Any'
			</otherwise>
		</choose>
		<if test="email != null"> <!-- 공백을 넣겠다 -->
			, email = #{email}
		</if>
		<if test="salary >= 0">
			, salary = #{salary}
		</if>
		<where>
			<if test="employeeId > 0">
				employee_id = #{employeeId}
			</if>
		</where>
	</update>

	<!-- 매개변수 2개인 경우 -->
	<update id="updateEmpSal">
		UPDATE employees
		SET salary = salary * #{info.salary} <!-- info.이름을 정해주는것 -->
		WHERE employee_id = #{eid} <!-- 파라미터타입이 객체한건일 때만 #{필드명}, 삭제의 경우 public int 
			deleteEmpInfo(int empId); 매개변수가 하나다 -->
	</update>

</mapper>